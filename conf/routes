# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page (sort of - atm this is weird + janky view model)
GET     /                            controllers.OutgoingController.index(req: Request)
POST    /outgoing                    controllers.OutgoingController.addOutgoing(req: Request)
GET     /outgoings                   controllers.OutgoingController.getOutgoings()

# Accounts
POST    /account                     controllers.AccountController.addAccount(req: Request)
GET     /accounts                    controllers.AccountController.getAccounts()
GET     /accountTypes                controllers.AccountController.numTypes()

# Incoming details

POST    /incoming                     controllers.IncomingController.addIncoming(req: Request)
POST    /updateIncoming               controllers.IncomingController.updateIncoming(id: Int, req: Request)
GET     /binIncoming/:id              controllers.IncomingController.archiveIncoming(id: Int, req: Request)
GET     /editIncoming/:id             controllers.IncomingController.listIncomingsWithPrefill(id: Int, req: Request)
GET     /incomings                    controllers.IncomingController.getIncomingsComplete()
GET     /myIncomings                  controllers.IncomingController.listIncomings(req: Request)

# Balances (doesn't really need an 'archive for now')

POST    /balance                     controllers.BalanceController.addBalance(req: Request)
GET     /balances                    controllers.BalanceController.getBalances()
GET     /myBalances                  controllers.BalanceController.listBalances(req: Request)

# SPOG ('Single Pane of Glass')
GET     /spog                         controllers.SpogController.index(req: Request)
GET     /spog/seed                    controllers.SpogController.seed(req: Request)

# Sharing (shared outgoings and tings)
GET     /mySharedOutgoings            controllers.PlanController.sharedOutgoings(req: Request)
POST    /plan                         controllers.PlanController.addPlan(req: Request)
GET     /binPlan/:id              controllers.PlanController.archivePlan(id: Int, req: Request)
GET     /plans                        controllers.PlanController.getPlansComplete()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
